@{
    ViewData["Title"] = "PI";
    ViewData["Category1"] = "Especificações Técnicas";

    ViewData["PageName"] = "home_Especificacoes";
    ViewData["Heading"] = "<i class='fal fa-info-circle'></i> Página Inicial";

    ViewData["PageDescription"] = "Qual tecnlogia usamos? E porquê?";
}
@section HeadBlock {}
    <div class="fs-lg fw-300 p-5 bg-white border-faded rounded mb-g">
        <h3 class="mb-g">
            Especificações Técnicas
        </h3>
        <p>
            <p>Acesse nosso repositório</p>
            <img src="~/img/Github.png" />
            <a href="https://github.com/dorathoto/PI-Flores">https://github.com/dorathoto/PI-Flores</a>

        </p>
        <p>
            Hoje quando pensamos em desenvolver um Aplicativo (no nosso caso um website) e sensores temos muitas tecnologias disponíveis. Devemos sempre nos basear em alguns fatores:
        </p>
        <ol>
            <li><b>Técnologias que conhecemos </b>- Não adianta querer utilizar a tecnologia XYZ se não temos nenhuma familiaridade com ela, é sim possível aprendermos novas tecnologias para um projeto, mas apenas quando elas são semelhantes a outras já conhecidas.</li>
            <li><b>Melhor tecnologia para o projeto</b>- O item 1 não deve ser definitivo, não devemos nos prender a apenas as tecnlogias conhecidas, ex: É possível fazer um aplicativo de celular com a tecnologia Python? Sim, mas é como tomar sopa de garfo, até é possível mas dará um trabalho.</li>
          
        </ol>
        Dividimos em 2 projetos, o Aplicativo e os Sensores. Vamos ver cada um deles.
        <fieldset>
            <legend>Aplicativo</legend>
            Para o aplicativo pensamos ao invés de fazer um Aplicativo Mobile + Site, devido a nossa restrinção de tempo, decidimos fazer um website que fosse responsivo (que se adapte a qualquer dispositivo). Assim tanto celulares como Computadores seriam possíveis de acessar.<br />
            Para isso utilizamos a metodologia <i>Mobile First ¹</i>

            <p><b>Front-end</b></p>
            <p>
                <ul>
                    <li><a href="https://pt.wikipedia.org/wiki/HTML5#" target="_blank">HTML5</a></li>
                    <li><a href="https://pt.wikipedia.org/wiki/CSS3" target="_blank">CSS 3</a></li>
                    <li><a href="https://pt.wikipedia.org/wiki/ECMAScript" target="_blank">ECMAScript 6</a></li>
                    <li><a href="http://npm.com" target="_blank">NPM</a></li>
                </ul>
            </p>
            <p><b>Back-end</b></p>            <p>
            <b>Tecnologias</b>
                <ul>
                    <li><a href="http://asp.net" target="_blank">ASP.Net Core 2.2</a></li>
                    <li><a href="https://azure.microsoft.com/pt-br/services/sql-database/" target="_blank">MS SQL Server rodando PaaS no Azure</a></li>
                    <li><a href="http://azure.com" target="_blank">Azure</a> </li>
                </ul>
            <p>Esse site serve para o sistema de gestão dos pequenos produtores rurais como endpoint (API) para receber os dados dos sensores, assim os sensores nas plantações enviam os dados para cá que centraliza e através de técnicas de BI criam os relatorios atuais.

            </p>
        </fieldset>
         <fieldset>
            <legend>Sensores - Iot</legend>
             <p>Os sensores serão desenvolvido na segunda etapa (próx. bimestre), basicamente são sensores de solo, ambiente desenvolvidos em RasberryPy + Python3 enviado os dados para nuvem (esse site)</p>
         </fieldset>
        <hr />
        <fieldset>
            <legend>Infraestrutura</legend>
            <p>
                Para estrutura de infra, foi pensado em utilizar o que existe de mais moderno atualmente, com o objetivo de evitar manutenções, instabilidades e outros tipos de problemas, então a escolha foi Infraestrutura na Nuvem utilizando o Microsoft Azure.<br />
                Na nuvem existem diversas possibilidades de arquitetura, como IaaS, PaaS e SaaS, para a escolha correta é necessário o entendimento de cada um.
            </p>
            <p>
                <b>PAAS – PLATAFORM AS A SERVICE / PLATAFORMA COMO SERVIÇO</b><br />
                Conforme a (MICROSOFT), neste modelo de serviço o portal irá disponibilizar a plataforma para desenvolvimento e gerenciamento do seus aplicativos na nuvem, sem que você precise se preocupar com a configuração de infraestrutura necessária para que esta plataforma esteja em funcionamento, configuração como SOs, servidores de aplicação e etc. Um servidor que hospeda seu site é um exemplo de um serviço PaaS. O Windows Azure, além de IaaS e SaaS, também se encaixa nesta categoria por oferecer ao usuário a plataforma necessária para desenvolver as suas próprias aplicações sem que ele precise se preocupar com a infraestrutura por traz disto.


            </p>
        </fieldset>

    </div>



@section ScriptsBlock {
}
